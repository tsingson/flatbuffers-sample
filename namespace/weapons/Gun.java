// automatically generated by the FlatBuffers compiler, do not modify

package weapons;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Gun extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Gun getRootAsGun(ByteBuffer _bb) { return getRootAsGun(_bb, new Gun()); }
  public static Gun getRootAsGun(ByteBuffer _bb, Gun obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Gun __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short damage() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public boolean bool() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public String name() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String names(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int namesLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector namesVector() { return namesVector(new StringVector()); }
  public StringVector namesVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createGun(FlatBufferBuilder builder,
      short damage,
      boolean bool,
      int nameOffset,
      int namesOffset) {
    builder.startTable(4);
    Gun.addNames(builder, namesOffset);
    Gun.addName(builder, nameOffset);
    Gun.addDamage(builder, damage);
    Gun.addBool(builder, bool);
    return Gun.endGun(builder);
  }

  public static void startGun(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addDamage(FlatBufferBuilder builder, short damage) { builder.addShort(0, damage, 0); }
  public static void addBool(FlatBufferBuilder builder, boolean bool) { builder.addBoolean(1, bool, false); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(2, nameOffset, 0); }
  public static void addNames(FlatBufferBuilder builder, int namesOffset) { builder.addOffset(3, namesOffset, 0); }
  public static int createNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endGun(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Gun get(int j) { return get(new Gun(), j); }
    public Gun get(Gun obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

